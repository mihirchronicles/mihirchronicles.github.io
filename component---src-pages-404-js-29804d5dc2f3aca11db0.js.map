{"version":3,"file":"component---src-pages-404-js-29804d5dc2f3aca11db0.js","mappings":"8KAAA,EAAe,IAA0B,qDCmDzC,MA9CeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EAD6B,MAChBH,EAASI,SAE9B,IACEC,EACEC,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,KAAI,CAACC,UAAU,WAAWC,GAAG,UAAS,SACvCH,EAAAA,cAACC,EAAAA,KAAI,CAACC,UAAU,WAAWC,GAAG,cAAa,SAC3CH,EAAAA,cAACC,EAAAA,KAAI,CAACC,UAAU,WAAWC,GAAG,WAAU,UACxCH,EAAAA,cAACC,EAAAA,KAAI,CAACC,UAAU,WAAWC,GAAG,SAAQ,QACtCH,EAAAA,cAACC,EAAAA,KAAI,CAACC,UAAU,WAAWC,GAAG,QAAO,OACrCH,EAAAA,cAACC,EAAAA,KAAI,CAACC,UAAU,WAAWC,GAAG,UAAS,OAI3C,OACEH,EAAAA,cAAA,OAAKE,UAAU,iBAAiB,oBAAmBL,GACjDG,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAG,IAAID,UAAU,mBACrBF,EAAAA,cAAA,OAAKI,IAAKC,EACRH,UAAU,aACVI,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,0BAGRX,EAAAA,cAAA,UAAQE,UAAU,iBAAiBH,GACnCC,EAAAA,cAAA,YAAOJ,GACPI,EAAAA,cAAA,cACAA,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,4FACNA,EAAAA,cAAA,KAAGY,KAAK,uCAAsCZ,EAAAA,cAAA,cAAQ,YAAoB,IAE1EA,EAAAA,cAAA,YAAM,OACNA,EAAAA,cAAA,KAAGY,KAAK,gDAA+CZ,EAAAA,cAAA,cAAQ,aAAqB,IAEpFA,EAAAA,cAAA,YAAM,OACNA,EAAAA,cAAA,KAAGY,KAAK,6BAA4BZ,EAAAA,cAAA,cAAQ,iB,kGCvCpD,MAWaa,EAAOA,IAAMb,EAAAA,cAACc,EAAAA,EAAG,CAACnB,MAAM,mBAErC,UAbqBF,IAAyB,IAAxB,KAAEsB,EAAI,SAAErB,GAAUD,EACtC,MAAMuB,EAAYD,EAAKE,KAAKC,aAAavB,MAEzC,OACEK,EAAAA,cAACmB,EAAAA,EAAM,CAACzB,SAAUA,EAAUC,MAAOqB,GACjChB,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,4D,+CCyCT,IA3CYP,IAAkD,IAAD2B,EAAAC,EAAAC,EAAA,IAAhD,YAAEC,EAAW,MAAE5B,EAAK,UAAE6B,EAAS,SAAE5B,GAAUH,EACtD,MAAM,KAAEwB,IAASQ,EAAAA,EAAAA,gBAAe,cAiB1BC,EAAkBH,GAAeN,EAAKC,aAAaK,YACnDI,EAAgC,QAApBP,EAAGH,EAAKC,oBAAY,IAAAE,OAAA,EAAjBA,EAAmBzB,MAClCiC,EAAeJ,GAAaP,EAAKC,aAAaM,UAEpD,OACExB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ2B,EAAkBhC,EAAK,MAAMgC,EAAiBhC,GACtDK,EAAAA,cAAA,QAAM6B,KAAK,cAAcC,QAASJ,IAClC1B,EAAAA,cAAA,QAAM+B,SAAS,WAAWD,QAASnC,IACnCK,EAAAA,cAAA,QAAM+B,SAAS,iBAAiBD,QAASJ,IACzC1B,EAAAA,cAAA,QAAM+B,SAAS,UAAUD,QAAQ,YACjC9B,EAAAA,cAAA,QAAM6B,KAAK,QAAQC,QAASF,IAC5B5B,EAAAA,cAAA,QAAM6B,KAAK,eAAeC,QAAQ,YAClC9B,EAAAA,cAAA,QAAM6B,KAAK,gBAAgBC,QAASF,IACpC5B,EAAAA,cAAA,QACE6B,KAAK,kBACLC,SAA0B,QAAjBT,EAAAJ,EAAKC,oBAAY,IAAAG,GAAQ,QAARC,EAAjBD,EAAmBW,cAAM,IAAAV,OAAR,EAAjBA,EAA2BW,UAAO,KAE7CjC,EAAAA,cAAA,QAAM6B,KAAK,gBAAgBC,QAASnC,IACpCK,EAAAA,cAAA,QAAM6B,KAAK,sBAAsBC,QAASJ,IACzC9B,G","sources":["webpack://mihirchronicles/./src/images/mehere.png","webpack://mihirchronicles/./src/components/layout.js","webpack://mihirchronicles/./src/pages/404.js","webpack://mihirchronicles/./src/components/seo.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/mehere-1c10259b2b25a3b5db518539891972a1.png\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport mehere from '../images/mehere.png'\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\nlet \n  header = (\n    <div>\n      <Link className=\"nav-link\" to=\"/notes\">Notes</Link>\n      <Link className=\"nav-link\" to=\"/bookshelf\">Books</Link>\n      <Link className=\"nav-link\" to=\"/essays\">Essays</Link>\n      <Link className=\"nav-link\" to=\"/work\">Work</Link>\n      <Link className=\"nav-link\" to=\"/art\">Art</Link>\n      <Link className=\"nav-link\" to=\"/about\">Me</Link>\n    </div>\n  )\n  \n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <Link to=\"/\" className=\"bio-avatar-link\">\n        <img src={mehere} \n          className=\"bio-avatar\"\n          layout=\"fixed\"\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          width={32}\n          height={32}\n          quality={95}\n          alt=\"The Mihir Chronicles\"\n          ></img>\n      </Link>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n      <hr></hr>\n        <p><i>Drop me a note if you are curious to chat. Newsletter goes out once a year in December.</i></p>\n        <a href=\"https://twitter.com/mihirchronicles\"><strong>Twitter</strong></a>\n          {` `}\n        <span> | </span>\n        <a href=\"https://www.linkedin.com/in/mihirchronicles/\"><strong>Linkedin</strong></a>\n        {` `}\n        <span> | </span>\n        <a href=\"https://eepurl.com/hRGv2D\"><strong>Newsletter</strong></a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, siteImage, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteImage\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const defaultImage = siteImage || site.siteMetadata.siteImage\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"image\" content={defaultImage} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:image\" content={defaultImage} />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","Link","className","to","src","mehere","layout","formats","width","height","quality","alt","href","Head","Seo","data","siteTitle","site","siteMetadata","Layout","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","siteImage","useStaticQuery","metaDescription","defaultTitle","defaultImage","name","content","property","social","twitter"],"sourceRoot":""}