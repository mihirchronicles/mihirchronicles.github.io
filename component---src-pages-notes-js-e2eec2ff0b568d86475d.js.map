{"version":3,"file":"component---src-pages-notes-js-e2eec2ff0b568d86475d.js","mappings":"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","sources":["webpack://mihirchronicles/./src/images/mehere.png","webpack://mihirchronicles/./src/components/layout.js","webpack://mihirchronicles/./src/pages/notes.js","webpack://mihirchronicles/./src/components/seo.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/mehere-1c10259b2b25a3b5db518539891972a1.png\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport mehere from '../images/mehere.png'\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\nlet \n  header = (\n    <div>\n      <Link className=\"nav-link\" to=\"/notes\">Notes</Link>\n      <Link className=\"nav-link\" to=\"/bookshelf\">Books</Link>\n      <Link className=\"nav-link\" to=\"/essays\">Essays</Link>\n      <Link className=\"nav-link\" to=\"/work\">Work</Link>\n      <Link className=\"nav-link\" to=\"/art\">Art</Link>\n      <Link className=\"nav-link\" to=\"/about\">Me</Link>\n    </div>\n  )\n  \n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <Link to=\"/\" className=\"bio-avatar-link\">\n        <img src={mehere} \n          className=\"bio-avatar\"\n          layout=\"fixed\"\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          width={32}\n          height={32}\n          quality={95}\n          alt=\"The Mihir Chronicles\"\n          ></img>\n      </Link>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n      <hr></hr>\n        <p><i>Drop me a note if you are curious to chat. Newsletter goes out once a year in December.</i></p>\n        <a href=\"https://twitter.com/mihirchronicles\"><strong>Twitter</strong></a>\n          {` `}\n        <span> | </span>\n        <a href=\"https://www.linkedin.com/in/mihirchronicles/\"><strong>Linkedin</strong></a>\n        {` `}\n        <span> | </span>\n        <a href=\"https://eepurl.com/hRGv2D\"><strong>Newsletter</strong></a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotesIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          No blog posts found.\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>Notes</h1>\n      <p>A compilation of in-depth explorations into topics that pulls me deeply. Each topic is a continuous journey, and I often revisit them as my knowledge expands.</p>\n      <ul>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              {/* <article\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              > */}\n                <Link to={post.fields.slug} itemProp=\"url\" className=\"post-link\">\n                  <span itemProp=\"headline\">{title}</span>\n                </Link>\n                <small><span> | </span>{post.frontmatter.date}</small>\n                {/* <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section> */}\n              {/* </article> */}\n            </li>\n          )\n        })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default NotesIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Notes\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/notes/\" }}\n      sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, siteImage, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteImage\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const defaultImage = siteImage || site.siteMetadata.siteImage\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"image\" content={defaultImage} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:image\" content={defaultImage} />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","Link","className","to","src","mehere","layout","formats","width","height","quality","alt","href","_data$site$siteMetada","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","Layout","map","post","frontmatter","fields","slug","key","itemProp","date","Head","Seo","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","siteImage","useStaticQuery","metaDescription","defaultTitle","defaultImage","name","content","property","social","twitter"],"sourceRoot":""}